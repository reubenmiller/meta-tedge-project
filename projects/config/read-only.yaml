# yaml-language-server: $schema=https://raw.githubusercontent.com/siemens/kas/66261547b75885786777a0b9c8a4400ab81d432e/kas/schema-kas.json
header:
  version: 14

local_conf_header:
  meta-read-only: |
    IMAGE_FEATURES:append = " read-only-rootfs"
    IMAGE_FEATURES:remove = " package-management"

    # Note: /data/tedge will be created when the image is used as /data does not exist at build time
    TEDGE_CONFIG_DIR = "/etc/tedge-default"
    TEDGE_CONFIG_SYMLINK = "/etc/tedge"
    TEDGE_CONFIG_SYMLINK_SRC = "/data/tedge"

    # Enable services by default as services can't be enabled at runtime with a read-only rootfs
    SYSTEMD_AUTO_ENABLE:tedge-agent = "enable"
    SYSTEMD_AUTO_ENABLE:tedge-mapper-c8y = "enable"
    SYSTEMD_AUTO_ENABLE:tedge-mapper-aws = "disable"
    SYSTEMD_AUTO_ENABLE:tedge-mapper-az = "disable"
    SYSTEMD_AUTO_ENABLE:tedge-mapper-collectd = "disable"

    # `has_journal` interferes with the checksum of the image when viewed from the block device. Oddly
    # enough it is not present on disk, IOW, when the image is mounted readonly, the physical checksum
    # on disk, and the checksum of the corresponding block device, are not the same. Work around this by
    # disabling the journal for read-only filesystems, where it is useless anyway.
    EXTRA_IMAGECMD:ext4:append = "${@bb.utils.contains('IMAGE_FEATURES', 'read-only-rootfs', ' -O ^has_journal', '', d)}"
